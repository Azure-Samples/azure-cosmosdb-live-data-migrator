{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceNamePrefix": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The default prefix used for all resources created for the migration app. Only use lower case letters to make sure the geenrated names are compliant. If empty the RG name will be used."
      }
    },
    "defaultSourceDatabaseAccountName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The default CosmosDB database account name for containers to be migrated - this is just a default and optional - it can be changed for each migration"
      }
    },
    "defaultSourceDatabaseAccountConnectionString": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The connection string of the default CosmosDB database account for containers to be migrated - this is just a default and optional - it can be changed for each migration"
      }
    },
    "defaultDestinationDatabaseAccountName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The default CosmosDB database account name for containers to be migrated to - this is just a default and optional - it can be changed for each migration"
      }
    },
    "defaultDestinationDatabaseAccountConnectionString": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 0,
      "metadata": {
        "description": "The connection string of the default CosmosDB database account name for containers to be migrated to - this is just a default and optional - it can be changed for each migration"
      }
    },
    "allowedUsers": {
      "type": "string",
      "minLength": 3,
      "metadata": {
        "description": "A list of all users who should have access to the migration application. To simplify the deployment there is no integration with RBAC - AAD is used for authentication but the authorization just checks whether the authenticated user is part of the list of allowed users. The sytnax of the allowedUsers string is to concat user identifiers (email or ObjectId) with a | as separator - for example user1@abc.com|user2@cde.com. The list of allowed users is stored in the app-settings of the UI app - so it can be modified there later."
      }
    },
    "migrationAppPackage": {
      "type": "string",
      "defaultValue": "//TODO fabianm populate",
      "minLength": 3,
      "metadata": {
        "description": "The full path tot he zip-package containing the deployment package for the Migration UI App"
      }
    },
    "exectuorWebJobPackage": {
      "type": "string",
      "defaultValue": "//TODO fabianm populate",
      "minLength": 3,
      "metadata": {
        "description": "The full path to the zip-package containing the deployment package for the Executor WebJob"
      }
    },
    "monitorWebJobPackage": {
      "type": "string",
      "defaultValue": "//TODO fabianm populate",
      "minLength": 3,
      "metadata": {
        "description": "The full path to the zip-package containing the deployment package for the Monitor WebJob"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[if(equals(parameters('resourceNamePrefix'), ''), toLower(resourceGroup().name), toLower(parameters('resourceNamePrefix')))]",
    "sanitizedResourcePrefix": "[replace(replace(toLower(variables('resourcePrefix')), '-', ''), '_', '')]",
    "migrationStatusDatabaseName": "MigrationServiceDB",
    "migrationStatusDatabaseAccountName": "[concat(variables('resourcePrefix'), '-', 'cdb')]",
    "migrationStatusContainerName": "MigrationStatus",
    "migrationStatusLeasesContainerName": "Leases",
    "appserviceplanName": "[concat(variables('resourcePrefix'), '-', 'plan')]",
    "executorJobName": "[concat(variables('resourcePrefix'), '-', 'executorjob')]",
    "monitorJobName": "[concat(variables('resourcePrefix'), '-', 'monitorjob')]",
    "migrationAppName": "[concat(variables('resourcePrefix'), '-', 'ui')]",
    "deadletterName": "[concat(concat(take(variables('sanitizedResourcePrefix'), 7), 'blob'), uniqueString(resourceGroup().id))]",
    "insightsName": "[concat(variables('resourcePrefix'), '-', 'insights')]",
    "keyVaultName": "[concat(concat(take(variables('sanitizedResourcePrefix'), 9), 'kv'), uniqueString(resourceGroup().id))]",
    "deadletterType": "Standard_LRS",
    "location": "[resourceGroup().location]",
    "tenantId": "[subscription().tenantId]",
    "aspEnvironmentName": "Production",
    "sanitizedSourceAccountNameToAvoidDuplicateResourceNames": "[if(equals(parameters('defaultDestinationDatabaseAccountName'), parameters('defaultSourceDatabaseAccountName')), concat(parameters('defaultSourceDatabaseAccountName'), uniqueString(resourceGroup().id)), parameters('defaultSourceDatabaseAccountName'))]"
  },
  "resources": [
    {
      "apiVersion": "2020-06-01",
      "name": "[variables('appserviceplanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[variables('location')]",
      "properties": {
        "name": "[variables('appserviceplanName')]"
      },
      "sku": {
        "name": "P3v2",
        "tier": "PremiumV2",
        "size": "P3v2",
        "family": "Pv2",
        "capacity": 5
      },
      "kind": "app"
    },
    {
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('insightsName')]",
      "type": "microsoft.insights/components",
      "location": "[variables('location')]",
      "properties": {
        "ApplicationId": "[variables('insightsName')]"
      }
    },
    {
      "apiVersion": "2020-06-01",
      "name": "[variables('migrationAppName')]",
      "type": "Microsoft.Web/sites",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components/', variables('insightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms/', variables('appserviceplanName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('migrationAppName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('insightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "default"
            },
            {
              "name": "DiagnosticServices_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "value": "disabled"
            },
            {
              "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "value": "disabled"
            },
            {
              "name": "InstrumentationEngine_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "SnapshotDebugger_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
              "value": "disabled"
            }
          ],
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "dotnet"
            }
          ],
          "netFrameworkVersion": "v4.0",
          "alwaysOn": "true"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appserviceplanName'))]",
        "clientAffinityEnabled": true
      },
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('migrationAppName'))]",
          ],
          "properties": {
            "cosmosdbaccount": "[variables('migrationStatusDatabaseAccountName')]",
            "keyvaulturi": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]",
            "defaultdestinationaccount": "[parameters('defaultDestinationDatabaseAccountName')]",
            "defaultsourceaccount": "[parameters('defaultSourceDatabaseAccountName')]",
            "cosmosdbdb": "[variables('migrationStatusDatabaseName')]",
            "allowedUsers": "[parameters('allowedUsers')]",
            "appinsightsinstrumentationkey": "[reference(resourceId('microsoft.insights/components/', variables('insightsName')), '2020-02-02-preview').InstrumentationKey]",
            "tenantId": "[variables('tenantId')]",
            "cosmosdbcollection": "[variables('migrationStatusContainerName')]",
            "ASPNETCORE_ENVIRONMENT": "[variables('aspEnvironmentName')]",
            "ASPNETCORE_HOSTINGSTARTUPASSEMBLIES": "Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation"
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('migrationAppName'))]"
          ],
          "tags": {
            "displayName": "Migration-UI-App"
          },
          "properties": {
            "packageUri": "[parameters('migrationAppPackage')]",
            "dbType": "None",
            "connectionString": "",
            "setParameters": {
              "IIS Web Application Name": "[variables('migrationAppName')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2020-06-01",
      "name": "[variables('monitorJobName')]",
      "type": "Microsoft.Web/sites",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components/', variables('insightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms/', variables('appserviceplanName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('monitorJobName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('insightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "default"
            },
            {
              "name": "DiagnosticServices_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "value": "disabled"
            },
            {
              "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "value": "disabled"
            },
            {
              "name": "InstrumentationEngine_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "SnapshotDebugger_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
              "value": "disabled"
            }
          ],
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "dotnet"
            }
          ],
          "netFrameworkVersion": "v4.0",
          "alwaysOn": "true"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appserviceplanName'))]",
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('monitorJobName'))]"
          ],
          "properties": {
            "cosmosdbaccount": "[variables('migrationStatusDatabaseAccountName')]",
            "keyvaulturi": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]",
            "cosmosdbdb": "[variables('migrationStatusDatabaseName')]",
            "appinsightsinstrumentationkey": "[reference(resourceId('microsoft.insights/components/', variables('insightsName')), '2020-02-02-preview').InstrumentationKey]",
            "cosmosdbcollection": "[variables('migrationStatusContainerName')]",
            "ASPNETCORE_ENVIRONMENT": "[variables('aspEnvironmentName')]",
            "ASPNETCORE_HOSTINGSTARTUPASSEMBLIES": "Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation"
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('monitorJobName'))]"
          ],
          "tags": {
            "displayName": "Migration-Monitor-WebJob"
          },
          "properties": {
            "packageUri": "[parameters('monitorWebJobPackage')]",
            "dbType": "None",
            "connectionString": "",
            "setParameters": {
              "IIS Web Application Name": "[variables('monitorJobName')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2020-06-01",
      "name": "[variables('executorJobName')]",
      "type": "Microsoft.Web/sites",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components/', variables('insightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms/', variables('appserviceplanName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('executorJobName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('insightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "default"
            },
            {
              "name": "DiagnosticServices_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "value": "disabled"
            },
            {
              "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "value": "disabled"
            },
            {
              "name": "InstrumentationEngine_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "SnapshotDebugger_EXTENSION_VERSION",
              "value": "disabled"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
              "value": "disabled"
            }
          ],
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "dotnet"
            }
          ],
          "netFrameworkVersion": "v4.0",
          "alwaysOn": "true"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appserviceplanName'))]",
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('executorJobName'))]"
          ],
          "properties": {
            "cosmosdbaccount": "[variables('migrationStatusDatabaseAccountName')]",
            "keyvaulturi": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]",
            "cosmosdbdb": "[variables('migrationStatusDatabaseName')]",
            "appinsightsinstrumentationkey": "[reference(resourceId('microsoft.insights/components/', variables('insightsName')), '2020-02-02-preview').InstrumentationKey]",
            "cosmosdbcollection": "[variables('migrationStatusContainerName')]",
            "ASPNETCORE_ENVIRONMENT": "[variables('aspEnvironmentName')]",
            "ASPNETCORE_HOSTINGSTARTUPASSEMBLIES": "Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation"
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('executorJobName'))]"
          ],
          "tags": {
            "displayName": "Migration-Executor-WebJob"
          },
          "properties": {
            "packageUri": "[parameters('exectuorWebJobPackage')]",
            "dbType": "None",
            "connectionString": "",
            "setParameters": {
              "IIS Web Application Name": "[variables('executorJobName')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2020-04-01",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('migrationStatusDatabaseAccountName')]",
      "location": "[variables('location')]",
      "properties": {
        "name": "[variables('migrationStatusDatabaseAccountName')]",
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxStalenessPrefix": 10,
          "maxIntervalInSeconds": 5
        },
        "locations": [
          {
            "locationName": "[variables('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('migrationStatusDatabaseAccountName'), '/', variables('migrationStatusDatabaseName'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('migrationStatusDatabaseAccountName'))]" ],
      "tags": {},
      "properties": {
        "resource": {
          "id": "[variables('migrationStatusDatabaseName')]"
        }
      },
      "resources": []
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('migrationStatusDatabaseAccountName'), '/', variables('migrationStatusDatabaseName'), '/', variables('migrationStatusContainerName'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('migrationStatusDatabaseAccountName'), variables('migrationStatusDatabaseName'))]" ],
      "properties": {
        "resource": {
          "id": "[variables('migrationStatusContainerName')]",
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
            ],
            "excludedPaths": [
              {
                "path": "/*"
              },
              {
                "path": "/\"_etag\"/?"
              }
            ]
          }
        },
        "options": {
          "autoscaleSettings": {
            "maxThroughput": "4000"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('migrationStatusDatabaseAccountName'), '/', variables('migrationStatusDatabaseName'), '/', variables('migrationStatusLeasesContainerName'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('migrationStatusDatabaseAccountName'), variables('migrationStatusDatabaseName'))]" ],
      "properties": {
        "resource": {
          "id": "[variables('migrationStatusLeasesContainerName')]",
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/completed/?"
              }
            ],
            "excludedPaths": [
              {
                "path": "/*"
              },
              {
                "path": "/\"_etag\"/?"
              }
            ]
          }
        },
        "options": {
          "autoscaleSettings": {
            "maxThroughput": "4000"
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location')]",
      "apiVersion": "2019-09-01",
      "tags": {
        "displayName": "Cosmos Migration KeyVault"
      },
      "properties": {
        "enabledForDeployment": "false",
        "enabledForTemplateDeployment": "false",
        "enabledForDiskEncryption": "false",
        "tenantId": "[variables('tenantId')]",
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('migrationAppName')), '2020-06-01', 'full').identity.principalId]",
            "tenantId": "[variables('tenantId')]",
            "permissions": {
              "keys": [],
              "secrets": [ "get", "list" ],
              "certificates": []
            }
          },
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('executorJobName')), '2020-06-01', 'full').identity.principalId]",
            "tenantId": "[variables('tenantId')]",
            "permissions": {
              "keys": [],
              "secrets": [ "get", "list" ],
              "certificates": []
            }
          },
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('monitorJobName')), '2020-06-01', 'full').identity.principalId]",
            "tenantId": "[variables('tenantId')]",
            "permissions": {
              "keys": [],
              "secrets": [ "get", "list" ],
              "certificates": []
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('migrationAppName'))]",
        "[resourceId('Microsoft.Web/sites', variables('executorJobName'))]",
        "[resourceId('Microsoft.Web/sites', variables('monitorJobName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', concat(variables('migrationStatusDatabaseAccountName'), '-CosmosDB-ConnectionString'))]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('migrationStatusDatabaseAccountName'), variables('migrationStatusDatabaseName'))]"
      ],
      "properties": {
        "value": "[listConnectionStrings(resourceid('Microsoft.DocumentDB/databaseAccounts', variables('migrationStatusDatabaseAccountName')), '2020-04-01').connectionStrings[0].connectionString]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "condition": "[and(not(equals(parameters('defaultDestinationDatabaseAccountName'), '')), not(equals(parameters('defaultDestinationDatabaseAccountConnectionString'), '')))]",
      "name": "[concat(variables('keyVaultName'), '/', concat(parameters('defaultDestinationDatabaseAccountName'), '-CosmosDB-ConnectionString'))]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('defaultDestinationDatabaseAccountConnectionString')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "condition": "[and(not(equals(parameters('defaultSourceDatabaseAccountName'), '')), not(equals(parameters('defaultSourceDatabaseAccountConnectionString'), '')),not(equals(parameters('defaultDestinationDatabaseAccountName'), '')), not(equals(toLower(parameters('defaultSourceDatabaseAccountName')), toLower(parameters('defaultDestinationDatabaseAccountName')))))]",
      "name": "[concat(variables('keyVaultName'), '/', concat(variables('sanitizedSourceAccountNameToAvoidDuplicateResourceNames'), '-CosmosDB-ConnectionString'))]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('defaultSourceDatabaseAccountConnectionString')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('deadletterName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', concat(variables('deadletterName'), '-BlobStorage-ConnectionString'))]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('deadletterName'))]"
      ],
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('deadletterName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('deadletterName')), '2019-06-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
      }
    }
  ]
}
